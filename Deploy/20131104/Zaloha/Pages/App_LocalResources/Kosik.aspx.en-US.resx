<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BTN_odstr" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="BTN_potvrdit" xml:space="preserve">
    <value>Send the order</value>
  </data>
  <data name="CBE_potvrdit" xml:space="preserve">
    <value>Confirm please</value>
  </data>
  <data name="doruceni" xml:space="preserve">
    <value>Method of payment and delivery</value>
  </data>
  <data name="FRV_row1" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="FRV_row2" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="FRV_row3" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="FRV_row4" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="FRV_row5" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="FRV_row6" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="FRV_row7" xml:space="preserve">
    <value>Zip code</value>
  </data>
  <data name="FRV_title1" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="FRV_title2" xml:space="preserve">
    <value>Delivery address</value>
  </data>
  <data name="FRV_title3" xml:space="preserve">
    <value>&lt;b&gt;Billing address&lt;/b&gt; (when different)</value>
  </data>
  <data name="FRV_title4" xml:space="preserve">
    <value>Comments and special requests</value>
  </data>
  <data name="kontakt" xml:space="preserve">
    <value>Contact info</value>
  </data>
  <data name="obsahKosiku" xml:space="preserve">
    <value>View cart</value>
  </data>
  <data name="popisBlok" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="RPT_footer" xml:space="preserve">
    <value>Price (the freigt cost will be shown on the proforma we will send asap)</value>
  </data>
  <data name="RPT_VybraneZbozi_Col1" xml:space="preserve">
    <value>Cat. number</value>
  </data>
  <data name="RPT_VybraneZbozi_Col2" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="RPT_VybraneZbozi_Col3" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="RPT_VybraneZbozi_Col4" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="RPT_VybraneZbozi_Col5" xml:space="preserve">
    <value>Total without VAT</value>
  </data>
  <data name="RPT_VybraneZbozi_Col6" xml:space="preserve">
    <value>Total with VAT</value>
  </data>
  <data name="VAL1" xml:space="preserve">
    <value>Enter 5 digits</value>
  </data>
  <data name="VAL2" xml:space="preserve">
    <value>Letters only, at least 2 characters</value>
  </data>
  <data name="VAL3" xml:space="preserve">
    <value>Incorrect e-mail</value>
  </data>
  <data name="VAL4" xml:space="preserve">
    <value>Letters only, at least 3 characters</value>
  </data>
  <data name="code_text13" xml:space="preserve">
    <value>We will send you proforma invoice showing exact freight cost. Payment according to the proforma invoicem, either via SWIFT or PayPal (details on the proforma invoice). We send the goods as soon as the payment is confirmed.</value>
  </data>
  <data name="code_text10" xml:space="preserve">
    <value>The confirmation mail was not send with your order. The order is valid.</value>
  </data>
  <data name="code_text11" xml:space="preserve">
    <value>Sorry, but your order was not processed correctly. A technical problem arosed. The administrator will be alerted to fix the error.</value>
  </data>
  <data name="code_text12" xml:space="preserve">
    <value>On {0} you have ordered at www.horejsi.cz  the following goods</value>
  </data>
  <data name="code_text2" xml:space="preserve">
    <value>The delivery price will be shown on the proforma invoice. </value>
  </data>
  <data name="code_text3" xml:space="preserve">
    <value>Pick up in person.</value>
  </data>
  <data name="code_text4" xml:space="preserve">
    <value>Delivery price: none</value>
  </data>
  <data name="code_text5" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="code_text6" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="code_text7" xml:space="preserve">
    <value>Thank you for your bussiness.</value>
  </data>
  <data name="code_text8" xml:space="preserve">
    <value>Order No. </value>
  </data>
  <data name="code_text9" xml:space="preserve">
    <value>You will receive confirmation on your e-mail address and proforma invoice with payment (SWIFT, PayPal) instructions</value>
  </data>
  <data name="RPT_VybraneZbozi_Col7" xml:space="preserve">
    <value>Margin</value>
  </data>
  <data name="RPT_VybraneZbozi_Col8" xml:space="preserve">
    <value>Total price incl. VAT</value>
  </data>
  <data name="FRV_row8" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="code_text1" xml:space="preserve">
    <value>Dobirka zde neni</value>
  </data>
  <data name="code_text14" xml:space="preserve">
    <value>We will send you proforma invoice showing exact freight cost. Payment according to the proforma invoicem, either via SWIFT or PayPal (details on the proforma invoice). We send the goods as soon as the payment is confirmed.</value>
  </data>
  <data name="bezPostovneho" xml:space="preserve">
    <value>Carriage free. Order price is greater than {0} CZK.</value>
  </data>
  <data name="code_text15" xml:space="preserve">
    <value>Poznamka tu neni</value>
  </data>
  <data name="RPT_VybraneZbozi_Col10" xml:space="preserve">
    <value>Price of goods without VAT</value>
  </data>
  <data name="RPT_VybraneZbozi_Col11" xml:space="preserve">
    <value>VAT</value>
  </data>
  <data name="RPT_VybraneZbozi_Col12" xml:space="preserve">
    <value>Price of goods with VAT</value>
  </data>
  <data name="RPT_VybraneZbozi_Col13" xml:space="preserve">
    <value>Unit price of goods without VAT</value>
  </data>
  <data name="RPT_VybraneZbozi_Col9" xml:space="preserve">
    <value>PHE</value>
  </data>
</root>